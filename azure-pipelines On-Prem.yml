name: $(BuildID)

trigger:
- '*'

variables:
  RepositoryUri: ggggg #will be replaced during lab deployment
  Domain: ddddd #will be replaced during lab deployment
  UserName: uuuuu #will be replaced during lab deployment
  Password: ppppp #will be replaced during lab deployment

jobs:
- job: DscBuild
  strategy:
    parallel: 4
  pool:
    name: Default
  workspace:
    clean: all
  steps:
    - task: PowerShell@2
      displayName: Register PowerShell Gallery
      inputs:
        targetType: inline
        script: |
          #always make sure the local PowerShell Gallery is registered correctly
          [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12
          $uri = '$(RepositoryUri)'
          $name = 'PowerShell'
          $domain = '$(Domain)'
          $userName = '$(UserName)'
          $password = '$(Password)'
          $cred = New-Object pscredential("$domain\$userName", ($password | ConvertTo-SecureString -AsPlainText -Force))
          Write-Host "Credentials for repository: '$domain\$userName' '$password'"
          $r = Get-PSRepository -Name $name -ErrorAction SilentlyContinue
          if (-not $r -or $r.SourceLocation -ne $uri -or $r.PublishLocation -ne $uri) {
              Write-Host "The Source or PublishLocation of the repository '$name' is not correct or the repository is not registered"
              Unregister-PSRepository -Name $name -ErrorAction SilentlyContinue
              Register-PSRepository -Name $name -SourceLocation $uri -PublishLocation $uri -InstallationPolicy Trusted -Credential $cred
              Get-PSRepository
          }
        errorActionPreference: stop

    - task: PowerShell@2
      displayName: 'Execute build.ps1'
      inputs:
        targetType: inline
        script: |
          Set-Location -Path .\DSC

          [int]$currentJobNumber = $env:SYSTEM_JOBPOSITIONINPHASE
          [int]$totalJobCount = $env:SYSTEM_TOTALJOBSINPHASE
          Write-Host "Calling 'Build.ps1' with parameter 'CurrentJobNumber' =  $currentJobNumber and 'TotalJobCount' = $totalJobCount"
          .\Build.ps1 -ResolveDependency -Repository PowerShell -CurrentJobNumber $currentJobNumber -TotalJobCount $totalJobCount

    - task: PublishTestResults@2
      displayName: 'Publish Integration Test Results'
      inputs:
        testResultsFormat: NUnit
        testResultsFiles: '**/IntegrationTestResults.xml'
        failTaskOnFailedTests: true

    - task: PublishBuildArtifacts@1
      displayName: MOF
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\DSC\BuildOutput\MOF'
        ArtifactName: MOF

    - task: PublishBuildArtifacts@1
      displayName: 'Meta MOF'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\DSC\BuildOutput\MetaMOF'
        ArtifactName: 'Meta MOF'

    - task: PublishBuildArtifacts@1
      displayName: RSOP
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\DSC\BuildOutput\RSOP'
        ArtifactName: RSOP

    - task: PublishBuildArtifacts@1
      displayName: 'Compressed Modules'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\DSC\BuildOutput\CompressedModules'
        ArtifactName: 'Compressed Modules'

    - task: PublishBuildArtifacts@1
      displayName: 'Build Folder'
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)'
        ArtifactName: 'SourcesDirectory'

    - task: PublishTestResults@2
      displayName: 'Publish Build Acceptance Test Results'
      inputs:
        testResultsFormat: NUnit
        testResultsFiles: '**/BuildAcceptanceTestResults.xml'
        failTaskOnFailedTests: true
